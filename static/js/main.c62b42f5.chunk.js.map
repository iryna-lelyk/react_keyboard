{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyBoardClick","event","setState","key","document","addEventListener","this","removeEventListener","className","length","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,MAEhB,MAAdF,EAAME,KACR,EAAKD,SAAS,CAAEH,WAAY,cAjBlC,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAqBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAWU,OAAX,mCAC8BV,EAD9B,KAEE,kCA7Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c62b42f5.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyBoardClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyBoardClick);\n  }\n\n  handleKeyBoardClick = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n\n    if (event.key === ' ') {\n      this.setState({ pressedKey: 'Spacebar' });\n    }\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { pressedKey.length\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}